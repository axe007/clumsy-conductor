# Copyright (C) 2023  Christian Berger
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# Which Docker image shall be used on the GitLab runner?
image: docker:19.03.3

# Details about how to connect to the Docker service to run this build.
variables:
  DOCKER_HOST: tcp://docker:2375
  DOCKER_TLS_CERTDIR: ""
  COVERAGE: "true"

services:
  - name: docker:19.03.3-dind

stages:
  - build
  - deploy

# Display information before we start the build.
before_script:
  - docker image prune -f
  - docker info
  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY

# This section describes what shall be done to build and test the project.
build-and-test:
  only: 
    - branches
  tags:
    - docker-build
  stage: build
  script:
    - docker build -f Dockerfile -t "${CI_REGISTRY_IMAGE}:${CI_COMMIT_SHA}" .
    - docker create --name temp_container "${CI_REGISTRY_IMAGE}:${CI_COMMIT_SHA}"
    - docker cp temp_container:/opt/coverage_report ./coverage_report
    - docker rm temp_container
    - docker push "${CI_REGISTRY_IMAGE}:${CI_COMMIT_SHA}"
  except:
    - tags
  coverage: '/^\s*lines:\s*\d+.\d+\%/'
  artifacts:
    name: ${CI_JOB_NAME}-${CI_COMMIT_REF_NAME}-${CI_COMMIT_SHA}
    expire_in: 60 days
    when: always
    paths:
      - coverage_report/
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage_report/coverage.xml
        
upload-to-codecov:
  stage: build
  script:
    - apk add --no-cache curl git
    - curl -Os https://uploader.codecov.io/latest/linux/codecov
    - chmod +x codecov
    - ./codecov -t $CODECOV_TOKEN -f coverage_report/coverage.xml
  needs:
    - build-and-test
  tags:
    - docker-build

# This section describes what shall be done to deploy artefacts from the project.
release:
  tags:
    - docker-build
  stage: deploy
  script:
    - docker build -f Dockerfile -t "$CI_REGISTRY_IMAGE":"$CI_COMMIT_TAG" .
    - docker push "$CI_REGISTRY_IMAGE":"$CI_COMMIT_TAG"
  only:
    - /^v(\d+\.)?(\d+\.)?(\d+)$/
  dependencies:
    - build-and-test