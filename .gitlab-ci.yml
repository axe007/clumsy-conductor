# Which Docker image shall be used on the GitLab runner?
image: docker:19.03.3

# Details about how to connect to the Docker service to run this build.
variables:
  DOCKER_HOST: tcp://docker:2375
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: ""
  CI_BUILDX_ARCHS: "linux/amd64,linux/arm/v7"
  DOCKER_CLI_EXPERIMENTAL: enabled
  BUILDX_URL: https://github.com/docker/buildx/releases/download/v0.3.1/buildx-v0.3.1.linux-amd64

services:
  - name: docker:dind
    command: ["--experimental"]

stages:
  - build
  - deploy

# Display information before we start the build.
before_script:
  - docker info
  - docker login -u $CI_REGISTRY_USER -p $CI_ACCESS_TOKEN $CI_REGISTRY

# This section describes what shall be done to build and test the project.
build:
  only: 
    - branches
  tags:
    - docker-build
  stage: build
  variables: 
    COVERAGE: "true"
  script:
    - docker build -f Dockerfile -t "${CI_REGISTRY_IMAGE}:${CI_COMMIT_SHA}" .
    - mkdir cid
    - docker create --name temp_container "${CI_REGISTRY_IMAGE}:${CI_COMMIT_SHA}"
  except:
    - tags

# This section describes what shall be done to deploy artefacts from the project.
release:
  stage: deploy
  tags:
    - docker-build
  before_script:
    - mkdir -p ~/.docker/cli-plugins
    - wget -O ~/.docker/cli-plugins/docker-buildx $BUILDX_URL
    - chmod 755 ~/.docker/cli-plugins/docker-buildx
    - docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
    - DOCKER_CLI_EXPERIMENTAL=enabled docker buildx create --name multiarchbuilder --use
    - DOCKER_CLI_EXPERIMENTAL=enabled docker buildx inspect --bootstrap
    - docker login -u $CI_REGISTRY_USER -p ${CI_ACCESS_TOKEN} ${CI_REGISTRY}
  only:
    refs:
      - tags
    variables:
      - $CI_COMMIT_TAG =~ /^v(\d+\.\d+\.\d+)$/
  dependencies:
    - build
  script:
    - DOCKER_CLI_EXPERIMENTAL=enabled docker buildx build --platform $CI_BUILDX_ARCHS -f Dockerfile -t "$CI_REGISTRY_IMAGE":"$CI_COMMIT_TAG" --push .
